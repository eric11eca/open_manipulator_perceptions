<launch>
  <arg name="use_gazebo"	  default="false" />
  <arg name="use_robot_name"      default="open_manipulator_6dof"/>
  <arg name="use_state_publisher" default="true"/>
  <arg name="open_rviz"           default="true"/>
  <arg name="marker_frame_id"     default="world"/>

  <arg name="camera_model"          default="realsense_d435" doc="model type [astra_pro, realsense_d435, raspicam]"/>
  <arg name="camera_namespace"      default="realsense"/>
  <arg name="rgb_camera_info_url"   default="package://open_manipulator_camera/camera_info/$(arg camera_model).yaml" />
  <arg name="depth_camera_info_url" default="" />

  <group if="$(arg use_gazebo)">
    <include file="$(find ar_track_alvar)/launch/pr2_indiv_no_kinect.launch">
      <arg name="marker_size"          value="5.0" />
      <arg name="max_new_marker_error" value="0.08" />
      <arg name="max_track_error"      value="0.2" />
      <arg name="cam_image_topic"      value="$(arg camera_namespace)/rgb/image_raw" />
      <arg name="cam_info_topic"       value="$(arg camera_namespace)/rgb/camera_info" />
      <arg name="output_frame"         value="$(arg marker_frame_id)" />
    </include>
  </group>

  <group unless="$(arg use_gazebo)">
    <group if="$(arg use_state_publisher)">
      <param name="robot_description"
            command="$(find xacro)/xacro --inorder '$(find open_manipulator_6dof_description)/urdf/open_manipulator_6dof.urdf.xacro'"/>

      <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
        <rosparam param="source_list" subst_value="true">["$(arg use_robot_name)/joint_states"]</rosparam>
      </node>

      <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
    </group>

    <node pkg="tf" type="static_transform_publisher" name="base_frame_to_camera_frame" args="0 0 0 0 0 0 world camera_link 10" />

    <group if="$(eval camera_model == 'astra_pro')">
      <include file="$(find astra_launch)/launch/astra_pro.launch">
        <arg name="camera"                value="$(arg camera_namespace)"/>
        <arg name="rgb_camera_info_url"   value="$(arg rgb_camera_info_url)" />
        <arg name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
      </include>

      <include file="$(find ar_track_alvar)/launch/pr2_indiv_no_kinect.launch">
        <arg name="marker_size"          value="4.5" />
        <arg name="max_new_marker_error" value="0.08" />
        <arg name="max_track_error"      value="0.2" />
        <arg name="cam_image_topic"      value="$(arg camera_namespace)/rgb/image_raw" />
        <arg name="cam_info_topic"       value="$(arg camera_namespace)/rgb/camera_info" />
        <arg name="output_frame"         value="$(arg marker_frame_id)" />
      </include>
    </group> 

    <group if="$(eval camera_model == 'realsense_d435')">
      <node pkg="tf" type="static_transform_publisher" name="camera_frame_to_realsense_frame"
        args="0 0 0 0 -1.57 0 end_effector_link realsense_link 10" />
      
      <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="camera"                value="$(arg camera_namespace)"/>
        <arg name="enable_pointcloud"     value="false" />
      </include>

      <include file="$(find ar_track_alvar)/launch/pr2_indiv_no_kinect.launch">
        <arg name="marker_size"          value="2.5" />
        <arg name="max_new_marker_error" value="0.08" />
        <arg name="max_track_error"      value="0.2" />
        <arg name="cam_image_topic"      value="$(arg camera_namespace)/color/image_raw" />
        <arg name="cam_info_topic"       value="$(arg camera_namespace)/color/camera_info" />
        <arg name="output_frame"         value="$(arg marker_frame_id)" />
      </include>
    </group> 

    <group if="$(eval camera_model == 'raspicam')">
      <node pkg="image_transport" type="republish" name="republish"
        args="compressed in:=raspicam_node/image raw out:=raspicam_node/image_raw"/>

      <node pkg="tf" type="static_transform_publisher" name="camera_frame_to_raspicam_frame"
        args="0 0 0 0 0 0 end_effector_link raspicam 10" />

      <include file="$(find ar_track_alvar)/launch/pr2_indiv_no_kinect.launch">
        <arg name="marker_size"          value="4.5" />
        <arg name="max_new_marker_error" value="0.08" />
        <arg name="max_track_error"      value="0.2" />
        <arg name="cam_image_topic"      value="/raspicam_node/image_raw" />
        <arg name="cam_info_topic"       value="/raspicam_node/camera_info" />
        <arg name="output_frame"         value="$(arg marker_frame_id)" />
      </include>
    </group>

  </group>

  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
      args="-d $(find open_manipulator_ar_markers)/rviz/ar_marker.rviz"/>
  </group>
</launch>


